local lsp = require('lsp-zero')

lsp.preset('recommended')

require('mason').setup({})
require('mason-lspconfig').setup({
    ensure_installed = {
	'snyk_ls',
	'typos_lsp',
    	'tsserver',
    	'eslint',
   	'lua_ls',
    	'rust_analyzer',
	'bashls',
	'gopls',
	'html',
	'pylsp',
	'terraformls',
    },
})

local cmp = require('cmp')
local cmp_select = { behavior  = cmp.SelectBehavior.Select }
local cmp_mappings = lsp.defaults.cmp_mappings({
    ['<C-p>'] = cmp.mapping.select_prev_item(cmp_select),
    ['<C-n>'] = cmp.mapping.select_next_item(cmp_select),
    ['<C-y>'] = cmp.mapping.confirm({ select = true }),
    ["<C-Space>"] = cmp.mapping.complete(),
})

lsp.set_preferences({
    sign_icons = { }
})

-- lsp.setup_nvim_cmp({
--     mapping = cmp_mappings
-- })

cmp.setup({
    window = {
      completion = cmp.config.window.bordered(),
      documentation = cmp.config.window.bordered(),
    },
    mapping = lsp.defaults.cmp_mappings({
    	['<C-p>'] = cmp.mapping.select_prev_item(cmp_select),
    	['<C-n>'] = cmp.mapping.select_next_item(cmp_select),
    	['<C-y>'] = cmp.mapping.confirm({ select = true }),
    	["<C-Space>"] = cmp.mapping.complete(),
    })
})

lsp.on_attach(function(client, bufnr)
    local opts = { buffer = bufnr, remap = false }

    vim.keymapeset("n", "gd", function() vim.lsp.buf.definition() end, opts)
    vim.keymapeset("n", "K", function() vim.lsp.buf.hover() end, opts)
    vim.keymapeset("n", "<leader>vws", function() vim.lsp.buf.workspace_symbol() end, opts)
    vim.keymapeset("n", "<leader>vd", function() vim.diagnostic.open_float() end, opts)
    vim.keymapeset("n", "[d", function() vim.diagnostic.goto_next() end, opts)
    vim.keymapeset("n", "]d", function() vim.diagnostic.goto_prev() end, opts)
    vim.keymapeset("n", "<leader>vca", function() vim.lsp.buf.code_action() end, opts)
    vim.keymapeset("n", "<leader>vrr", function() vim.lsp.buf.references() end, opts)
    vim.keymapeset("n", "<leader>vrn", function() vim.lsp.buf.rename() end, opts)
    vim.keymapeset("i", "<C-h>", function() vim.lsp.buf.signature_help() end, opts)
end)

lsp.setup()
